package by.epam.javatraining.beseda.webproject.util.wrapperconnector;

import by.epam.javatraining.beseda.webproject.util.connectionpool.DBConnector;
import org.apache.log4j.Logger;

import static by.epam.javatraining.beseda.webproject.util.resourceloader.DatabaseProperties.DATABASE_URL;
import static by.epam.javatraining.beseda.webproject.util.resourceloader.DatabaseProperties.DATABASE_USER;
import static by.epam.javatraining.beseda.webproject.util.resourceloader.DatabaseProperties.DATABASE_PASSWORD;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;

public class WrapperConnector {

    private Logger log = Logger.getLogger(WrapperConnector.class.getSimpleName());

    private Connection connection;
    private DBConnector pool;

    public WrapperConnector() {
        pool = DBConnector.createConnectionPool(DATABASE_URL, DATABASE_USER, DATABASE_PASSWORD);
        try {
            connection = pool.getConnection();
        } catch (SQLException e) {
            log.error("Error creating a connection to database: " + e);
        }
    }

    public Statement createStatement() throws SQLException {
        Statement st = null;
        if (connection != null) {
            st = connection.createStatement();
        }
        return st;
    }

    public PreparedStatement prepareStatement(String statement) throws SQLException {
        return connection.prepareStatement(statement + ";");
    }

    public PreparedStatement prepareStatementWithAutoGeneratedKeys(String statement) throws SQLException {
        return connection.prepareStatement(statement + ";", Statement.RETURN_GENERATED_KEYS);
    }

    public void closeStatement(Statement st) {
        if (st != null) {
            try {
                st.close();
            } catch (SQLException e) {
                log.error("Error closing statement: " + e);
            }
        }
    }

    public void closeConnection() {
        if (connection != null) {
            try {
                connection.close();
            } catch (SQLException e) {
                log.error("Error closing connection: " + e);
            }
        }
    }
}
